var express = require('express'), path = require('path'), url = require('url');

var context = function(req, resp) {
    var parts = url.parse(req.url).pathname.split('/');
    this.controllerRoot = './controllers';
    this.controllerName = parts[1] || 'home';
    this.viewName = parts[2] || 'index';
    this.method = req.method.toLowerCase();
    this.request = req;
    this.response = resp;
};

context.prototype.invoke = function(controllerName, viewName) {
    this.controller(controllerName, viewName).render(this);
};

context.prototype.view = function(options, subview) {
    var viewPath = this.viewPath || url.parse(this.request.url).pathname.substring(1);
    if(subview) viewPath = [viewPath, subview].join('/');
    !options.channel && (options.channel = this.controllerName);
    this.response.render(
        viewPath,
        options);
};

context.prototype.controller = function(controllerName, viewName) {
    if(controllerName && viewName) this.viewPath = [controllerName || this.controllerName, viewName || this.viewName].join('/');
    return require(path.resolve([this.controllerRoot, controllerName || this.controllerName, viewName || this.viewName, this.method].join('/')));
};

exports.context = context;